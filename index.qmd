---
title: "Influenza A H7N9 in China, 2013"
format: dashboard
theme: lux
---

```{r}
# Load packages 
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, outbreaks, bslib, bsicons, shiny, 
               rgeoboundaries, plotly, htmltools, reactable, ggplot2)

# view data
#View(head(outbreaks::fluH7N9_china_2013))
```


```{r}
flu_2013 <- outbreaks::fluH7N9_china_2013
#head(flu_2013)



Total_cases_value <- 
  flu_2013 %>% 
 nrow()

Total_Hospitalization_value <- 
  flu_2013%>%
  filter(!is.na(date_of_hospitalisation))%>%
  nrow()

Total_deaths_value <- 
  flu_2013%>%
  filter(outcome == "Death") %>%
  nrow()


```


```{r}
country_shapes <- rnaturalearth::ne_countries()

```


# HOME 
## Row 1 {height=20%}

```{r}
value_box(
  title = "Total Cases",
  value = Total_cases_value,
  showcase = bsicons::bs_icon("virus"),
  theme = value_box_theme(bg = "#518fd6")
)
```

```{r}
value_box(
  title = "Total Hospitalisations",
  value = Total_Hospitalization_value,
  showcase = bsicons::bs_icon("hospital"),
  theme = value_box_theme(bg = "#214773")
)
```

```{r}
value_box(
  title = "Total Deaths",
  value = Total_deaths_value,
  showcase = bsicons::bs_icon("file-medical"),
  theme = value_box_theme(bg = "#3f71ab")
)
```


## Row 2 {height=80%}

### {width=40%}

```{r }
  Flu_2013_byProvince <- flu_2013 %>%
  group_by(province) %>%
  summarise(Cases = n())

barChart_plot<-
  ggplot(Flu_2013_byProvince, aes(x = Cases, y =reorder(province,Cases) )) +
  geom_bar(stat = "identity", fill = "deepskyblue4") +
  labs(x = "Number of cases", y = "") +
  theme_minimal()

```
```{r title = "Number of Cases by Province"}
barChart_plot
```


### {width=60%}


```{r results='hide', message=FALSE, warning = FALSE}
pacman::p_load(outbreaks, rgeoboundaries, plotly)

### MAP OF CASES PER PROVINCE
province_summary <- flu_2013 %>% 
  group_by(province) %>% 
  summarise(total_cases = n()) 

china_map <- rgeoboundaries::gb_adm1("china")

# Check the keys to see if join will be successful
setdiff(province_summary$province, china_map$shapeName)
setdiff(china_map$shapeName, province_summary$province)
# Some work to be done to harmonize these

china_map <- china_map %>%
  # Remove the strings Province, Municipality and Autonomous Region 
  # to allow matching
  mutate(province = str_trim(
    str_remove(shapeName, "Province|Municipality|Autonomous Region")
  ))

# Check if join will work fine
setdiff(province_summary$province, china_map$province)

# Fix Guangdong, which based on a quick Google is actually Guangzhou
china_map <- china_map %>% 
  mutate(province = if_else(province == "Guangzhou", "Guangdong", province)) 
  
# Check again
setdiff(province_summary$province, china_map$province)

# Now join
china_map_joined <- 
  left_join(china_map, province_summary, by = "province") %>% 
  # Create tooltip label 
  mutate(tooltip_label = paste0(province, ": ", total_cases))

china_map_plot <- ggplot(china_map_joined) +
  geom_sf(aes(fill = total_cases, text = tooltip_label)) + 
  theme_void() +
  labs(fill = "Number of Cases") + 
  theme(legend.position = "none")

china_map_plot_ggplotly <- 
  ggplotly(china_map_plot, tooltip = "text")
```

```{r title="Map of Provinces by Number of Cases"}
china_map_plot_ggplotly
```


# DOWNLOAD DATA

```{r}
library(htmltools)

htmltools::browsable(
  tagList(
    reactable(flu_2013, 
              elementId = "flu_2013-table", 
              searchable = T, 
              filterable = T), 
    
tags$button("Download as CSV", 
            onclick = "Reactable.downloadDataCSV('flu_2013-table')")
  )
)
```


# ABOUT

This dashboard analyzes data on the 2013 influenza A H7N9 outbreak in China.

Key points:

- There were `r Total_cases_value` total reported cases
- `r Total_Hospitalization_value` cases were hospitalized  
- `r Total_deaths_value` deaths occurred
- The most affected provinces were Zhejiang, Shanghai and Jiangsu

The data is sourced from a Dryad dataset by Kucharski et al (2014) who collated case details from various reports. This dashboard provides an interactive visualization of the outbreak's geographical distribution and key statistics.

Reference: 
Kucharski, A., Mills, H., Pinsent, A., Fraser, C., Kerkhove, M. V., Donnelly, C. A., & Riley, S. (2014). Distinguishing between reservoir exposure and human-to-human transmission for emerging pathogens using case onset data. *PLOS Currents Outbreaks*, 1. https://doi.org/10.1371/currents.outbreaks.e1473d9bfc99d080ca242139a06c455f
